/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.18 public/models/BaseWWindLighthouse.glb 
*/

import React, { useEffect, useRef, useState } from 'react';
import { Text, useGLTF } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { useTheme } from 'next-themes';
export default function Model({ windRPM = 0, trigger, ...props }) {
  const { nodes, materials } = useGLTF('./models/Lighthouse.glb');
  const [speed, setSpeed] = useState();
  const { resolvedTheme } = useTheme();

  const windowLights =
    resolvedTheme === 'dark' ? materials.Light : materials.Dark;

  useEffect(() => {
    if (windRPM !== undefined && windRPM !== 0) {
      setSpeed((windRPM / 60) * 2 * Math.PI);
    }
  }, [windRPM]);

  const ref = useRef();

  useFrame((state, delta) => {
    if (speed !== undefined) {
      ref.current.rotation.y += speed * delta;
    }
  });
  return (
    <group {...props} dispose={null} position={[0, -10.1, 0]}>
      <group position={[0, 5.407, 0]} scale={0.292}>
        <mesh
          geometry={nodes.uploads_files_220346_Lindau_Lighthouse_1.geometry}
          material={materials.Default}
        />
        <mesh
          geometry={nodes.uploads_files_220346_Lindau_Lighthouse_2.geometry}
          material={materials.Brass}
        />
        <mesh
          geometry={nodes.uploads_files_220346_Lindau_Lighthouse_3.geometry}
          material={windowLights}
        />
        <mesh
          geometry={nodes.uploads_files_220346_Lindau_Lighthouse_4.geometry}
          material={materials.Dark}
        />
      </group>
      <mesh
        geometry={nodes.Cylinder.geometry}
        material={materials.BrickWall}
        position={[0, 3.127, 0]}
        scale={[3.567, 2.488, 3.567]}
      />
      <mesh
        onPointerOver={(event) => (
          event.stopPropagation(), trigger('percentageHumidity')
        )}
        onPointerOut={(event) => trigger('')}
        geometry={nodes.WaterLevel.geometry}
        material={materials.LevelIndicator}
        position={[2, 4, 3]}
        rotation={[0, 0.641, 0]}
        scale={[0.024, 0.236, 0.006]}
      />
      <group
        ref={ref}
        {...props}
        onPointerOver={(event) => (event.stopPropagation(), trigger('windRPM'))}
        onPointerOut={(event) => trigger('')}
        position={[0, 13.693, 0]}
        scale={1.051}
      >
        <mesh geometry={nodes.Circle001.geometry} material={materials.Brass} />
        <mesh geometry={nodes.Circle001_1.geometry} material={materials.Wood} />
        <mesh
          geometry={nodes.Circle001_2.geometry}
          material={materials.Material}
        />
      </group>
    </group>
  );
}

useGLTF.preload('./models/Lighthouse.glb');
